fun = function(x){
mean(x,na.rm=T)
}) %>%
as.vector() # Por que no usar max para los maximos (en ese caso seria para cada pixel)
date <- seq(as.Date('1981-01-01'),as.Date('2018-02-01'), by='month')
# df
pp <- data.frame(date, data) %>%
mutate(mes = substr(date, 6, 7)) %>%
group_by(mes) %>%
summarise(ppmean = mean(data, na.rm = T),
ppmax = max(data, na.rm = T),
ppmin = min(data, na.rm=T))
names(pp) <- c("mes", "PP media histórica", "PP máxima histórica", "PP mínima histórica")
pp <- melt(pp, id.vars = c("mes"))
pps <- data.frame(date, value = data) %>%
mutate(mes = substr(date, 6, 7)) %>%
dplyr::filter(substr(date, 1, 4) %in% c(2000, 2005, 2010, 2016)) %>%
add_column(variable = rep(c("PP 2000", "PP 2005", "PP 2010", "PP 2016"), each = 12)) %>%
dplyr::select(-date)
# Union filas
PP <- pp %>% add_row(pps)
PP$date <- rep(seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = 'month'), 7)
names(PP)[2] <- "Precipitación [mm]" # name leyenda
# Plot
ggplot(data = PP, aes(x = date, y = value,
fill = `Precipitación [mm]`, color = `Precipitación [mm]`,
alpha = `Precipitación [mm]`, group = `Precipitación [mm]`)) + # , size = variable
geom_line(aes(linetype = `Precipitación [mm]`)) +
geom_point() +
scale_linetype_manual(values=c("solid", "solid", "solid", "solid",
"dotted", "twodash", "dotted")) +
scale_colour_manual(values=c("#e9c612", "#e31a1c", "#54278f", "#3fce1e",
"#0555f4", "black", "#0555f4")) +
scale_alpha_manual(values = c(1, 1, 1, 1, 1, 1, 1)) +
# scale_size_manual(values=c(0.2, 0.2, 0.2, 0.2, 0.5, 0.5, 0.5)) +
theme_test() +
ylab(label = '[mm]') +
xlab(label = '') +
ggtitle('Precipitacion acumulada mensual', subtitle = 'De 1981 hasta 2018') +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=10),
axis.title = element_text(size=20),
axis.title.y =  element_text(size=12, face='bold'),
legend.position = c(.5,.83), # posicion de la leyenda
legend.background = element_rect(fill = "white",
color = "#fed976",
linetype = "solid"),
legend.key = element_rect(fill = "white"),
legend.key.height= unit(0.1, 'cm'),
legend.key.width = unit(0.5,"cm"), # ancho de simbolo leyenda
legend.margin = margin(0.1, 0.1, 0.1, 0.1, "cm"),
legend.title = element_text(face = "bold", size=8.5), # modificar letra del titulo
legend.text = element_text(size=7), # tamano letra etiqueta
legend.title.align = 0.5,
legend.spacing.y = unit(0.1, "cm")) + # distancia entre titulo legend y los labels
scale_x_date(date_labels = '%b', breaks = '1 month') + # , breaks = '1 month', date_labels = '%b'
scale_y_continuous(breaks = seq(0,300,50), limits = c(0, 270))
# pp_velox <- velox("RasterData/PISCO/PISCOp_v11_area.tif")
# region <- st_read("Materiales/area.gpkg", quiet = TRUE)
#
# data <- pp_velox$extract(sp=region,
#                          fun = function(x){
#                            mean(x,na.rm=T)
#                            }) %>%
#         as.vector() # Por que no usar max para los maximos (en ese caso seria para cada pixel)
#
# date <- seq(as.Date('1981-01-01'),as.Date('2018-02-01'), by='month')
#
# pp <- data.frame(date, data) %>%
#   mutate(mes = substr(date, 6, 7)) %>%
#   group_by(mes) %>%
#   summarise(ppmean = mean(data, na.rm = T),
#             ppmax = max(data, na.rm = T),
#             ppmin = min(data, na.rm=T))
#
# pp2000 <- data.frame(date, pp2000 = data) %>%
#   mutate(mes = substr(date, 6, 7)) %>%
#   dplyr::filter(substr(date, 1, 4) == 2000) %>%
#   dplyr::select(-date)
#
# pp2005 <- data.frame(date, pp2005 = data) %>%
#   mutate(mes = substr(date, 6, 7)) %>%
#   dplyr::filter(substr(date, 1, 4) == 2005) %>%
#   dplyr::select(-date)
#
# pp2010 <- data.frame(date, pp2010 = data) %>%
#   mutate(mes = substr(date, 6, 7)) %>%
#   dplyr::filter(substr(date, 1, 4) == 2010) %>%
#   dplyr::select(-date)
#
# pp2016 <- data.frame(date, pp2016 = data) %>%
#   mutate(mes = substr(date, 6, 7)) %>%
#   dplyr::filter(substr(date, 1, 4) == 2016) %>%
#   dplyr::select(-date)
#
# df <- data.frame(date = seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = 'month'), pp) %>%
#   full_join(pp2000) %>% full_join(pp2005) %>%
#   full_join(pp2010) %>% full_join(pp2016)
#
#
# X <- ggplot(df, aes(date, ppmean)) +
#   geom_line(colour = 'black', size=.8) +
#   theme_bw() +
#   ylab(label = '[mm]') +
#   xlab(label = '') +
#   ggtitle('Precipitacion acumulada mensual', subtitle = 'De 1981 hasta 2018') +
#   theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
#         plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
#         axis.text.x = element_text(size=12), axis.text.y = element_text(size=12),
#         axis.title = element_text(size=20), axis.title.y =  element_text(size=12, face='bold')) +
#   scale_x_date(date_labels = '%b', breaks = '1 month') +
#   scale_y_continuous(breaks = seq(0,300,50), limits = c(0, 270)) +
#   geom_line(aes(date, ppmax),  colour = 'red', linetype = 'dashed', size=.8) +
#   geom_line(aes(date, ppmin),  colour = 'red', linetype = 'dashed', size=.8) +
#   geom_line(aes(date, pp2000), colour = rgb(233, 228, 91, maxColorValue=255), size=.8) +
#   geom_line(aes(date, pp2005), colour = rgb(160, 114, 14, maxColorValue=255), size=.8) +
#   geom_line(aes(date, pp2010), colour = 'snow3', size=.8) +
#   geom_line(aes(date, pp2016), colour = 'springgreen3', size=.8) +
#   geom_point(aes(date, pp2000), colour = rgb(233, 228, 91, maxColorValue=255) , size=2) +
#   geom_point(aes(date, pp2005), colour = rgb(160, 114, 14, maxColorValue=255) , size=2) +
#   geom_point(aes(date, pp2010), colour = 'snow3', size=2) +
#   geom_point(aes(date, pp2016), colour = 'springgreen3', size=2)
#
# X
temp_velox <- velox("RasterData/PISCO/PISCOmtx_v11_area.tif")
region <- st_read("Materiales/area.gpkg", quiet = TRUE)
data <- temp_velox$extract(sp = region, fun = function(x){ mean(x, na.rm = T) }) %>%
as.vector()
date <- seq(as.Date('1981-01-01'), as.Date('2016-12-01'), by = 'month')
temp <- data.frame(date, data) %>%
mutate(mes = substr(date,6,7)) %>%
group_by(mes) %>%
summarise(tempmean = mean(data, na.rm = T),
tempmax  = max(data, na.rm = T),
tempmin  = min(data, na.rm = T))
names(temp) <- c("mes", "TempM media histórica", "TempM máxima histórica", "TempM mínima histórica")
temp <- melt(temp, id.vars = c("mes"))
temps <- data.frame(date, value = data) %>%
mutate(mes = substr(date,6,7)) %>%
dplyr::filter(substr(date, 1, 4) %in% c(2000, 2005, 2010, 2016)) %>%
add_column(variable = rep(c("TemM 2000", "TemM 2005", "TemM 2010", "TemM 2016"), each = 12)) %>%
dplyr::select(-date)
# Union filas
TEMP <- temp %>% add_row(temps)
TEMP$date <- rep(seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = 'month'), 7)
names(TEMP)[2] <- "Temperatura [°C]" # name leyenda
# Plot
ggplot(data = TEMP, aes(x = date, y = value,
fill = `Temperatura [°C]`, color = `Temperatura [°C]`,
alpha = `Temperatura [°C]`, group = `Temperatura [°C]`)) + # , size = variable
geom_line(aes(linetype = `Temperatura [°C]`)) +
geom_point() +
scale_linetype_manual(values=c("solid", "solid", "solid", "solid",
"dotted", "twodash", "dotted")) +
scale_colour_manual(values=c("#e9c612", "blue", "#54278f", "#3fce1e",
"red", "black", "red")) +
scale_alpha_manual(values = c(1, 1, 1, 1, 1, 1, 1)) +
# scale_size_manual(values=c(0.2, 0.2, 0.2, 0.2, 0.5, 0.5, 0.5)) +
theme_test() +
ylab(label = '[Temperatura °C]') +
xlab(label = '') +
ggtitle('Temperatura Maxima mensual', subtitle = 'De 1981 hasta 2018') +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=10),
axis.title = element_text(size=20),
axis.title.y =  element_text(size=12, face='bold'),
legend.position = c(0.25, 0.83), # posicion de la leyenda
legend.background = element_rect(fill = "#fffeeb",
color = "black",
linetype = "dotted"),
legend.key = element_rect(fill = "white"),
legend.key.height= unit(0.1, 'cm'),
legend.key.width = unit(0.6, "cm"), # ancho de simbolo leyenda
legend.margin = margin(0.1, 0.1, 0.1, 0.1, "cm"),
legend.title = element_text(face = "bold", size=8.5), # modificar letra del titulo
legend.text = element_text(size=7), # tamano letra etiqueta
legend.title.align = 0.5,
legend.spacing.y = unit(0.1, "cm")) + # distancia entre titulo legend y los labels
scale_x_date(date_labels = '%b', breaks = '1 month') +
scale_y_continuous(breaks = seq(16,25,1), limits = c(17, 25))
#
# temp2005 <- data.frame(date, temp2005 = data) %>%
#   mutate(mes = substr(date,6,7)) %>%
#   dplyr::filter(substr(date,1,4) == 2005) %>%
#   dplyr::select(-date)
#
# temp2010 <- data.frame(date, temp2010 = data) %>%
#   mutate(mes = substr(date,6,7)) %>%
#   dplyr::filter(substr(date,1,4) == 2010) %>%
#   dplyr::select(-date)
#
# temp2016 <- data.frame(date, temp2016 = data) %>%
#   mutate(mes = substr(date,6,7)) %>%
#   dplyr::filter(substr(date,1,4) == 2016) %>%
#   dplyr::select(-date)
#
# df <- data.frame(date = seq(as.Date('2016-01-01'), as.Date('2016-12-01'), by = 'month'), temp) %>%
#   full_join(temp2000) %>%
#   full_join(temp2005) %>%
#   full_join(temp2010) %>%
#   full_join(temp2016)
#
# Sys.setlocale(category = 'LC_ALL', locale = 'spanish')
#
# X <- ggplot(df, aes(date, tempmean)) +
#      geom_line(colour = 'black', size=0.8) +
#      theme_bw() + ylab(label = '[°C]') +  xlab(label = '') +
#      ggtitle('Temperatura Maxima mensual', subtitle = 'De 1981 hasta 2016') +
#      theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
#            plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
#            axis.text.x = element_text(size=12),
#            axis.text.y = element_text(size=12),
#            axis.title = element_text(size=12, face='bold'))+
#      scale_x_date(date_labels = '%b', breaks = '1 month') +
#      scale_y_continuous(breaks = seq(16,25,1), limits = c(17, 24)) +
#      geom_line(aes(date, tempmax),  colour = 'red', linetype = 'dashed', size = 0.8) +
#      geom_line(aes(date, tempmin),  colour = 'blue', linetype = 'dashed', size = 0.8) +
#      geom_line(aes(date, temp2000), colour = rgb(233, 228, 91, maxColorValue = 255), size = 0.8) +
#      geom_line(aes(date, temp2005), colour = rgb(160, 114, 14, maxColorValue = 255), size = 0.8) +
#      geom_line(aes(date, temp2010), colour = 'snow3', size=0.8) +
#      geom_line(aes(date, temp2016), colour = 'springgreen3', size=.8) +
#      geom_point(aes(date, temp2000), colour = rgb(233, 228, 91, maxColorValue=255) , size=2) +
#      geom_point(aes(date, temp2005), colour = rgb(160, 114, 14, maxColorValue=255) , size=2) +
#      geom_point(aes(date, temp2010), colour = 'snow3', size=2) +
#      geom_point(aes(date, temp2016), colour = 'springgreen3', size=2)
#
# X
ndvi_velox <- velox("RasterData/Resultados/SavGol/savgol_stack.nc")
region <- st_read("Materiales/area.gpkg", quiet = TRUE)
data <- ndvi_velox$extract(sp = region, fun = function(x){ mean(x, na.rm = T) }) %>% as.vector()
ndvi_lista <- list.files("RasterData/Resultados/SavGol/", pattern = '.tif$')
for(i in 1:length(ndvi_lista)){
date = ndvi_lista[i] %>% strsplit("_") %>% sapply("[",1) %>% substr(1,10) # lo ultimo no se si va
if (i == 1) {dt = data.frame(date)} else{dt = rbind(dt,date)} # raro dt sii existe
}
dates <- as.Date(dt$date)
data_ndvi <- data.frame(dates,data) %>%
mutate(mes=substr(dates,6,7), year=substr(dates,1,4)) %>%
group_by(year,mes) %>% summarise(ndvi = mean(data, na.rm = T))
col_ndvi <- data_ndvi$ndvi
tserie <- seq(as.Date('2000-02-01'), as.Date('2018-12-31'), by = 'month')
# df
ndvi <- data.frame(date =tserie,col_ndvi) %>%
mutate(mes = substr(date,6,7)) %>%
group_by(mes) %>%
summarise(ndvimean = mean(col_ndvi, na.rm = T),
ndvimax  = max(col_ndvi, na.rm = T),
ndvimin  = min(col_ndvi, na.rm = T))
names(ndvi) <- c("mes", "NDVI medio histórico", "NDVI máximo histórico", "NDVI mínimo histórico")
ndvi <- melt(ndvi, id.vars = c("mes"))
ndvis <- data.frame(tserie, value = col_ndvi) %>%
mutate(mes = substr(tserie, 6, 7)) %>%
dplyr::filter(substr(tserie, 1, 4) %in% c(2004, 2005, 2010, 2016)) %>%
add_column(variable = rep(c("NDVI 2000", "NDVI 2005", "NVDI 2010", "NDVI 2016"), each = 12)) %>%
dplyr::select(-tserie)
# Union filas
NDVI <- ndvi %>% add_row(ndvis)
NDVI$date <- rep(seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = 'month'), 7)
names(NDVI)[2] <- "NDVIs" # name leyenda
# plot
ggplot(data = NDVI, aes(x = date, y = value,
fill = NDVIs, color = NDVIs,
alpha = NDVIs, group = NDVIs)) + # , size = variable
geom_line(aes(linetype = NDVIs)) +
geom_point() +
scale_linetype_manual(values=c("solid", "solid", "solid", "dotted",
"twodash", "dotted", "solid")) +
scale_colour_manual(values=c("#fd8d3c", "#e31a1c", "#54278f", "#317800",
"black", "#96ff00", "#0555f4")) +
scale_alpha_manual(values = c(1, 1, 1, 1, 1, 1, 1)) +
# scale_size_manual(values=c(0.2, 0.2, 0.2, 0.2, 0.5, 0.5, 0.5)) +
theme_test() +
ylab(label = '[NDVI]') +
xlab(label = '') +
ggtitle('NDVI Mensual', subtitle = 'De 2000 hasta 2018') +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=10),
axis.title = element_text(size=20),
axis.title.y =  element_text(size=12, face='bold'),
legend.position = c(0.65, 0.8), # posicion de la leyenda
legend.background = element_rect(fill = "#f1ffdc",
color = "#00441b",
linetype = "dotted"),
legend.key = element_rect(fill = "white"),
legend.key.height= unit(0.1, 'cm'),
legend.key.width = unit(0.6, "cm"), # ancho de simbolo leyenda
legend.margin = margin(0.1, 0.1, 0.1, 0.1, "cm"),
legend.title = element_text(face = "bold", size=8.5), # modificar letra del titulo
legend.text = element_text(size=7), # tamano letra etiqueta
legend.title.align = 0.5,
legend.spacing.y = unit(0.1, "cm")) + # distancia entre titulo legend y los labels
scale_x_date(date_labels = '%b', breaks = '1 month') + # , breaks = '1 month', date_labels = '%b'
scale_y_continuous(breaks = seq(0,0.7,0.05), limits = c(0.38, 0.7))
# ndvi2005 <- data.frame(tserie, col_ndvi) %>%
#   mutate(mes = substr(tserie,6,7)) %>%
#   dplyr::filter(substr(tserie,1,4) == 2005) %>%
#   group_by(mes) %>% summarise(ndvi2005 = mean(col_ndvi, na.rm=T))
#
# ndvi2010 <- data.frame(tserie, col_ndvi) %>%
#   mutate(mes = substr(tserie,6,7)) %>%
#   dplyr::filter(substr(tserie,1,4) == 2010) %>%
#   group_by(mes) %>% summarise(ndvi2010 = mean(col_ndvi, na.rm=T))
#
# ndvi2016 <- data.frame(tserie, col_ndvi) %>%
#   mutate(mes = substr(tserie,6,7)) %>%
#   dplyr::filter(substr(tserie,1,4) == 2016) %>%
#   group_by(mes) %>% summarise(ndvi2016 = mean(col_ndvi, na.rm=T))
#
# df <- data.frame(date = seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = 'month'), ndvi) %>%
#   full_join(ndvi2005) %>%
#   full_join(ndvi2010) %>%
#   full_join(ndvi2016)
#
#
# X <- ggplot(df, aes(date, ndvimean)) +
#      geom_line(colour = 'black', size=0.8) +
#      theme_bw() + ylab(label = '[NDVI]') +  xlab(label = '') +
#      ggtitle('NDVI mensual', subtitle = 'De 2000 hasta 2018') +
#      theme(plot.title = element_text(size = 16, hjust = 0.5, face = 'bold'),
#            plot.subtitle = element_text(size=13, hjust=0.5, face = 'italic'),
#            axis.text.x = element_text(size=12),
#            axis.text.y = element_text(size=12),
#            axis.title = element_text(size=12, face='bold'))+
#      scale_x_date(date_labels = '%b', breaks = '1 month') +
#      scale_y_continuous(breaks = seq(0.35,0.65,0.05), limits = c(0.35,0.65)) +
#      geom_line(aes(date, ndvimax),  colour = 'red', linetype = 'dashed', size = 0.8) +
#      geom_line(aes(date, ndvimin),  colour = 'red', linetype = 'dashed', size = .8) +
#      geom_line(aes(date, ndvi2005), colour = rgb(160, 114, 14, maxColorValue = 255), size = 0.8) +
#      geom_line(aes(date, ndvi2010), colour = 'snow3', size=.8) +
#      geom_line(aes(date, ndvi2016), colour = 'springgreen3', size=.8) +
#      geom_point(aes(date, ndvi2005), colour = rgb(160, 114, 14, maxColorValue=255) , size=2) +
#      geom_point(aes(date, ndvi2010), colour = 'snow3', size=2) +
#      geom_point(aes(date, ndvi2016), colour = 'springgreen3', size=2)
#
# X
pp_velox <- velox('RasterData/PISCO/PISCOp_v11_area.tif')
region_elev <- st_read('Materiales/area_alt_group.gpkg', quiet = TRUE) %>% arrange(DN)
date <- seq(as.Date('1981-01-01'), as.Date('2018-02-01'), by = "month")
data <- pp_velox$extract(sp = region_elev, fun = function(x){ mean(x, na.rm = T) }) %>% t()
df <- data.frame(date,data)[229:446,] %>%
mutate(mes = substr(date,6,7)) %>%
group_by(mes) %>%
summarise(inter01 = mean(X1, na.rm = T), inter02 = mean(X2, na.rm = T), inter03 = mean(X3, na.rm = T),
inter04 = mean(X4, na.rm = T), inter05 = mean(X5, na.rm = T),
inter06 = mean(X6, na.rm = T), inter07 = mean(X7, na.rm = T),
inter08 = mean(X8, na.rm = T), inter09 = mean(X9, na.rm = T)) %>%
mutate(mes = seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = "month"))
names(df)[2:10] <- seq(500,4500,500) %>% as.character()
df <- df %>% melt(id.vars = 'mes') # transponer los demas cabeceras y sus elementos, respecto a una columna
names(df) <- c('mes','elev','pp')
hm.palette <- colorRampPalette(brewer.pal(8, 'YlGnBu'), space='Lab')
X <- ggplot(df, aes(mes, elev))+ geom_raster(aes(fill=pp)) +
scale_fill_gradientn(colours = hm.palette(100)) + theme_bw() +
ggtitle('Precipitación Mensual por Elevación', subtitle = 'De 2000 a 2018') +
labs(x = '', y = 'Altitud\n[msnm]', fill='[mm]') +
scale_x_date(date_labels = '%b', breaks = '1 month', expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size = 12, hjust = 1),
axis.text.y   = element_text(size = 12),
axis.title.y  = element_text(size = 15, hjust = 0.5, face = 'bold', vjust = 0.5))
X
# theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
#       plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
#       axis.text.x   = element_text(size = 12, hjust = 1),
#       axis.text.y   = element_text(size = 12),
#       axis.title.y  = element_text(size = 15, hjust = 0.5, face = 'bold', vjust = 0.5))  + #
# scale_x_date(date_labels = "%b", breaks = '1 month') +
# scale_y_continuous(breaks = seq(0,140,20), limits = c(0, 140)) +
# theme(legend.position = "none")
# ggsave(plot = X, filename = 'D:/DataBase/Theme_n2/04-Graphics/Seasonal_by_Elev_Rainfall.png',
#        width = 15, height = 15, units = "cm", dpi = 500)
temp_velox <- velox('RasterData/PISCO/PISCOmtx_v11_area.tif')
region_elev <- st_read('Materiales/area_alt_group.gpkg', quiet = TRUE) %>% arrange(DN)
date <- seq(as.Date('1981-01-01'), as.Date('2016-12-01'), by = "month")
data <- temp_velox$extract(sp = region_elev, fun = function(x){ mean(x, na.rm = T) }) %>% t()
df <- data.frame(date,data)[229:432,] %>%
mutate(mes = substr(date,6,7)) %>%
group_by(mes) %>%
summarise(inter01 = mean(X1, na.rm = T), inter02 = mean(X2, na.rm = T), inter03 = mean(X3, na.rm = T),
inter04 = mean(X4, na.rm = T), inter05 = mean(X5, na.rm = T),
inter06 = mean(X6, na.rm = T), inter07 = mean(X7, na.rm = T),
inter08 = mean(X8, na.rm = T), inter09 = mean(X9, na.rm = T)) %>%
mutate(mes = seq(as.Date('2016-01-01'), as.Date('2016-12-01'), by = "month"))
names(df)[2:10] <- seq(500,4500,500) %>% as.character()
df <- df %>% melt(id.vars = 'mes')
names(df) <- c('mes','elev','temp')
hm.palette <- colorRampPalette(brewer.pal(15, 'Reds'), space='Lab')
X <- ggplot(df, aes(mes, elev))+ geom_raster(aes(fill=temp)) +
scale_fill_gradientn(colours = hm.palette(100)) + theme_bw() +
ggtitle('Temperatura Máxima por Elevación', subtitle = 'De 1981 a 2018') +
labs(x = '', y = 'Altitud\n[msnm]', fill='[°C]') +
scale_x_date(date_labels = '%b', breaks = '1 month', expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size = 12, hjust = 1),
axis.text.y   = element_text(size = 12),
axis.title.y  = element_text(size = 15, hjust = 0.5, face = 'bold', vjust = 0.5))
X
# ggsave(plot = X, filename = 'D:/DataBase/Theme_n2/04-Graphics/Seasonal_by_Elev_Temperature.png',
#        width = 15, height = 15, units = "cm", dpi = 500)
ndvi_velox <- velox("RasterData/Resultados/SavGol/savgol_stack.nc")
region_elev <- st_read('Materiales/area_alt_group.gpkg', quiet = TRUE) %>% arrange(DN)
data <- ndvi_velox$extract(sp = region_elev, fun = function(x){ mean(x, na.rm = T) }) %>% t()
ndvi_lista <- list.files("RasterData/Resultados/SavGol/", pattern = '.tif$')
for(i in 1:length(ndvi_lista)){
date = ndvi_lista[i] %>% strsplit("_") %>% sapply("[",1) %>% substr(1,10)
if (i == 1) { dt   = data.frame(date) }else{ dt = rbind(dt,date)}
}
dates <- as.Date(dt$date)
df<-data.frame(date=dates,data)  %>%
mutate(mes = substr(date, 6, 7)) %>%
group_by(mes) %>%
summarise(inter01 = mean(X1, na.rm = T), inter02 = mean(X2, na.rm = T), inter03 = mean(X3, na.rm = T),
inter04 = mean(X4, na.rm = T), inter05 = mean(X5, na.rm = T),
inter06 = mean(X6, na.rm = T), inter07 = mean(X7, na.rm = T),
inter08 = mean(X8, na.rm = T), inter09 = mean(X9, na.rm = T)) %>%
mutate(mes = seq(as.Date('2018-01-01'), as.Date('2018-12-01'), by = "month"))
names(df)[2:10] <- seq(500,4500,500) %>% as.character()
df <- df %>% melt(id.vars = 'mes')
names(df) <- c('mes','elev','ndvi')
hm.palette <- colorRampPalette(brewer.pal(9, 'YlGnBu'), space='Lab')
X <- ggplot(df, aes(mes, elev))+ geom_raster(aes(fill=ndvi)) +
scale_fill_gradientn(colours = hm.palette(100)) + theme_bw() +
ggtitle('NDVI por Elevación', subtitle = 'De 2000 a 2018') +
labs(x = '', y = 'Altitud\n[msnm]', fill='[NDVI]') +
scale_x_date(date_labels = '%b', breaks = '1 month', expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size = 12, hjust = 1),
axis.text.y   = element_text(size = 12),
axis.title.y  = element_text(size = 15, hjust = 0.5, face = 'bold', vjust = 0.5))
X
# ggsave(plot = X, filename = 'D:/DataBase/Theme_n2/04-Graphics/Seasonal_by_Elev_Temperature.png',
#        width = 15, height = 15, units = "cm", dpi = 500)
## Vista gráfica de la distribución de las variables ---
hist(pp.matrix)
hist(ndvi.matrix)
## Test de Shapiro-Wilk --------------------------------
shapiro.test(pp.matrix)
shapiro.test(ndvi.matrix)
## Test de Anderson Darling ----------------------------
ad.test(pp.matrix)
ad.test(ndvi.matrix)
# arriba pp.matrix esta definidaaaaaa
data_frame(val = as.vector(pp.matrix)[(as.vector(pp.matrix) >= -1) & (as.vector(pp.matrix) <= 1)]) %>%
ggplot(aes(val)) +
geom_histogram(binwidth = 0.1, fill='gray', col='black') +
theme_bw() +
ylab(label = 'Frecuencia de anomalías\n') +
xlab(label = '') +
ggtitle('Anomalías del NDVI mensual', subtitle = 'Desde 2000 al 2017\nHistograma') +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size=12),
axis.text.y   = element_text(size=12),
axis.title    = element_text(size=20),
panel.border  = element_rect(colour = "black", fill=NA, size=1),
axis.title.y = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722"),
axis.title.x = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722")) +
scale_y_continuous(breaks = seq(0,40,5), limits = c(0, 40), expand = c(0,0)) +
scale_x_continuous(breaks = seq(-1, 1, 0.1), limits = c(-1, 1.1), expand = c(0,0))
# arriba pp.matrix esta definida
data_frame(val = as.vector(pp.matrix)[as.vector(pp.matrix) <= 1]) %>% # filtro <= a 1
ggplot(aes(val)) +
geom_histogram(binwidth = 0.1, fill='gray', col='black') +
theme_bw() + labs(x = '', y = '') +
ylab(label = 'Frecuencia de anomalías\n') +
xlab(label = '') +
ggtitle('Anomalías de precipitación acumulada mensual', subtitle = 'Desde 2000 al 2017\nHistograma') +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size=12),
axis.text.y   = element_text(size=12),
axis.title    = element_text(size=20),
panel.border  = element_rect(colour = "black", fill=NA, size=1),
axis.title.y = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722"),
axis.title.x = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722")) +
scale_y_continuous(breaks = seq(0,40,5), limits = c(0, 40), expand = c(0,0)) +
scale_x_continuous(breaks = seq(-1, 1, 0.1), limits = c(-1, 1.1), expand = c(0,0))
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error = FALSE)
# arriba pp.matrix esta definida
data_frame(val = as.vector(pp.matrix)[(as.vector(pp.matrix) >= -1) & (as.vector(pp.matrix) <= 1)]) %>%
ggplot(aes(val)) +
geom_histogram(binwidth = 0.1, fill='gray', col='black') +
theme_bw() +
ylab(label = 'Frecuencia de anomalías\n') +
xlab(label = '') +
ggtitle('Anomalías del NDVI mensual', subtitle = 'Desde 2000 al 2017\nHistograma') +
theme(plot.title    = element_text(size = 20, hjust = 0.5, face = 'bold'),
plot.subtitle = element_text(size = 12, hjust = 0.5, face = 'italic'),
axis.text.x   = element_text(size=12),
axis.text.y   = element_text(size=12),
axis.title    = element_text(size=20),
panel.border  = element_rect(colour = "black", fill=NA, size=1),
axis.title.y = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722"),
axis.title.x = element_text(size = 12, hjust = 0.5, face = 'bold', vjust = 0.5, color = "#020722")) +
scale_y_continuous(breaks = seq(0,40,5), limits = c(0, 40), expand = c(0,0)) +
scale_x_continuous(breaks = seq(-1, 1, 0.1), limits = c(-1, 1.1), expand = c(0,0))
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep",
"Oct","Nov","Dec")
# Corr ----------------------------------------------------
melted_a <- reshape2::melt(a)
