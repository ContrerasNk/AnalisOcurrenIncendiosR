Number_JmType <- fires$Date %>% unique() %>% length() # Numero de especies
Names_JmType <- fires$Date %>% unique() ## Nombre de las especies
Colores <- c("#ef3b2c", "#ffffff", "#807dba", "#33a02c", "#fed976",
"#000000", "#0570b0", "#a6cee3", "#1f78b4", "#b2df8a",
"#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00",
"#cab2d6", "#6a3d9a", "#b15928") # colorbrewer2, Colores de las especies seran
pal <- colorFactor(Colores, domain = Names_JmType) # Generamos la paleta
# Partimos un sf en varios sf
Spp_Pres <- list()
for (i in 1:length(Names_JmType)) {
Spp_Pres[[i]] <- fires %>% dplyr::filter(Date == Names_JmType[i])
}
names(Spp_Pres) <- Names_JmType
# Ploteamos cada sf, pero sin leyenda
Spp_Map <- leaflet() %>% addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png") %>%
addPolygons(data = Departamentos, fillOpacity = 0, weight = 1, opacity = 1,
label = ~DEPARTAMEN, color = "#ef3b2c", group = "Departamentos")
for (i in 1:length(Spp_Pres)) {
Spp_Map <- Spp_Map %>%
addCircleMarkers(data = Spp_Pres[[i]],
lat = ~Latitud, lng = ~Longitud, fillColor = ~pal(Date),
fillOpacity = 0.8, radius = 6, weight = 0.5, label = ~Provincia,
color = ~pal(Date), group =  Names_JmType[i],
popup = popupTable((Spp_Pres[[i]])[,2:length(Spp_Pres[[i]])],
row.numbers = F, feature.id = F))
}
# Agremos leyenda y su visualizador por grupos, tanto leyenda como suelos
Spp_Map <- Spp_Map %>%
addLegend(data = fires, "bottomleft", pal = pal,
values = ~Date, title = "Inc: 2000-2018",
opacity = 0.8, group = "Leyenda") %>%
addLayersControl(overlayGroups = c("Leyenda"), baseGroups = Names_JmType,
options = layersControlOptions(collapsed = FALSE), position = "topright")
Spp_Map
fires  <- st_read('Materiales/registro_incendios_2000_2018.gpkg', quiet = TRUE)
peru <- st_read('Materiales/Peru.gpkg', quiet = TRUE)
Departamentos <- st_read('Materiales/Departamentos.gpkg', quiet = TRUE)
# Extracción de coordenadas de los puntos
fires_df <- st_coordinates(fires) %>% as.data.frame()
names(fires_df) <- c('lon','lat')#here
# Aplicación de la estimación
kde <- kde2d(fires_df$lon, fires_df$lat, n = 250, h = .5, lims = c(-86, -65, -19, 0))
kde_raster <- kde %>% raster() %>% crop(peru) %>% mask(peru)
kde_raster <- kde_raster * 100
pal <- colorNumeric(c("#3182bd", "#fec44f", "#f03b20"), values(kde_raster), na.color ="transparent")
leaflet() %>% addTiles() %>%
addRasterImage(kde_raster, colors = pal) %>%
addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Departamentos, fillOpacity = 0, weight = 2,
opacity = 1, label = ~DEPARTAMEN, color = "#000000", group = "Departamentos")
fires  <- st_read('Materiales/registro_incendios_2000_2018.gpkg', quiet = TRUE)
peru <- st_read('Materiales/Peru.gpkg', quiet = TRUE)
Departamentos <- st_read('Materiales/Departamentos.gpkg', quiet = TRUE)
# Extracción de coordenadas de los puntos
fires_df <- st_coordinates(fires) %>% as.data.frame()
names(fires_df) <- c('lon','lat')#here
# Aplicación de la estimación
kde <- kde2d(fires_df$lon, fires_df$lat, n = 250, h = .5, lims = c(-86, -65, -19, 0))
kde_raster <- kde %>% raster() %>% crop(peru) %>% mask(peru)
kde_raster <- kde_raster * 100
pal <- colorNumeric(c("#3182bd", "#fec44f", "#f03b20"), values(kde_raster), na.color ="transparent")
leaflet() %>% addTiles() %>%
addRasterImage(kde_raster, colors = pal) %>%
addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Departamentos, fillOpacity = 0, weight = 2,
opacity = 1, label = ~DEPARTAMEN, color = "#000000", group = "Departamentos")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 8] = NA
kde_raster_clas[kde_raster >= 8] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 2] = NA
kde_raster_clas[kde_raster >= 2] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 4] = NA
kde_raster_clas[kde_raster >= 4] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 5] = NA
kde_raster_clas[kde_raster >= 5] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 6] = NA
kde_raster_clas[kde_raster >= 6] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 5] = NA
kde_raster_clas[kde_raster >= 5] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(sf)
library(rgee)
library(mapedit)
library(raster)
library(cptcity)
library(leaflet)
library(leaflet.extras)
library(leafpop)
library(MASS)
library(dplyr)
library(ncdf4)
library(devtools)
library(velox)
library(signal)
library(foreach)
library(RColorBrewer)
library(reshape2)
# Inicializando sesion en GEE
ee_install()
ee_Initialize('juliocontreras1', drive =TRUE)
rgee::ee_install_set_pyenv(
py_path = "C:/Program Files/QGIS 3.16/bin/python3.exe", # Change it for your own Python PATH
py_env = "rgee" # Change it for your own Python ENV
)
ee_check()
py_install("geemap")
reticulate::py_install("geemap")
install.packages("reticulate")
install.packages("rgee")
rgee::ee_install()
install_github("r-spatial/rgee")
detach("package:rgee", unload = TRUE)
install_github("r-spatial/rgee")
install_github("r-spatial/rgee")
install_github("r-spatial/rgee")
install_github("r-spatial/rgee")
install_github("r-spatial/rgee")
library(rgee)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inicializando sesion en GEE
ee_install()
rgee::ee_install_set_pyenv(
py_path = "C:/Program Files/QGIS 3.16/bin/python3", # Change it for your own Python PATH
py_env = "rgee" # Change it for your own Python ENV
)
# Inicializando sesion en GEE
ee_install()
ee_clean_pyenv()
rgee::ee_install_set_pyenv(
py_path = "C:/Program Files/QGIS 3.16/bin/python3", # Change it for your own Python PATH
py_env = "rgee" # Change it for your own Python ENV
)
# Inicializando sesion en GEE
ee_install()
ee_Initialize('juliocontreras1', drive =TRUE)
install.packages("rgee")
rgee::ee_install()
install_miniconda()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(sf)
library(rgee)
library(mapedit)
library(raster)
library(cptcity)
library(leaflet)
library(leaflet.extras)
library(leafpop)
library(MASS)
library(dplyr)
library(ncdf4)
library(devtools)
library(velox)
library(signal)
library(foreach)
library(RColorBrewer)
library(reshape2)
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 5] = NA
kde_raster_clas[kde_raster >= 5] = 1
# writeRaster(kde_raster, 'raster2.tif')
# Posicion para el ploteo
centroid <- st_centroid(Cutervo)
X <- (st_coordinates(centroid))[,"X"]
Y <- (st_coordinates(centroid))[,"Y"]
# Interactivo
leaflet() %>%
addTiles(urlTemplate = "https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png", group = "Dark") %>%
addTiles(urlTemplate = "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", group = "Satellite") %>%
setView(lng = X, lat = Y, zoom = 6.5) %>%
addRasterImage(kde_raster_clas, colors = "#f03b20", group = "Density") %>%
# addLegend(pal = pal, values = values(kde_raster),title = "% Incendios") %>%
addPolygons(data = Provincias, fillOpacity = 0, weight = 1, opacity = 1,
label = ~PROVINCIA, color = "#ffff33", group = "Provincias") %>%
addPolygons(data = Cutervo, fillOpacity = 0, weight = 4, opacity = 1,
label = ~PROVINCIA, color = "#54278f",group = "Anta") %>%
addLayersControl(baseGroups = c("Dark", "Satellite"), overlayGroups = "Density",
options = layersControlOptions(collapsed = FALSE), position = "topright")
kde_sf <- rasterToPolygons(kde_raster_clas)
kde_sf
plot(kde_sf)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T)
plot(kde_sf)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf()
kde_sf
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)))  # ver cantidad de poligonos resultantes
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry))  # ver cantidad de poligonos resultantes
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000)  # ver cantidad de poligonos resultantes
writeRaster(kde_sf)
st_write(kde_sf)
st_write(kde_sf, "")
st_write(kde_sf, "Materiales/allareas.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%  # ver cantidad de poligonos resultantes
filter(id == 4)
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 5] = NA
kde_raster_clas[kde_raster >= 5] = 1
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%  # ver cantidad de poligonos resultantes
filter(id == 4)
Provincias <- st_read('Materiales/Provincias.gpkg', quiet = TRUE)
Cutervo <- st_read('Materiales/Cutervo.gpkg', quiet = TRUE)
kde_raster_clas <- kde_raster
kde_raster_clas[kde_raster < 5] = NA
kde_raster_clas[kde_raster >= 5] = 1
kde_raster_clas
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000)
kde_sf
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%  # ver cantidad de poligonos resultantes
filter(id == 4)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
filter(,id == 4)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4)
kde_sf
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area.gpkg")
?at_simplify
?st_simplify
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 0.5)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area1.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dist = 0.25)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 0.05)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area2.gpkg")
install.packages("rmapshaper")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 100)
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 100)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area3.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 1000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area4.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 100000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area4.gpkg")
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area5.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 10000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area6.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 5000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area7.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 7000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area8.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 6000)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area9.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 6500)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area10.gpkg")
kde_sf <- rasterToPolygons(kde_raster_clas, dissolve = T) %>%
disaggregate() %>% # multipoligon
st_as_sf() %>%
mutate(id = 1:14, area = st_area(geometry)/1000000) %>%
dplyr::filter(id == 4) %>%
st_simplify(dTolerance = 6500)
# st_write(kde_sf, "Materiales/allareas.gpkg")
st_write(kde_sf, "Materiales/area.gpkg")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(sf)
library(rgee)
library(mapedit)
library(raster)
library(cptcity)
library(leaflet)
library(leaflet.extras)
library(leafpop)
library(MASS)
library(dplyr)
library(ncdf4)
library(devtools)
library(velox)
library(signal)
library(foreach)
library(RColorBrewer)
library(reshape2)
# Inicializando sesion en GEE
ee_install()
y
