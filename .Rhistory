## Vista gráfica de la distribución de las variables ---
hist(pp.matrix)
hist(ndvi.matrix)
## Test de Shapiro-Wilk --------------------------------
shapiro.test(pp.matrix)
shapiro.test(ndvi.matrix)
## Test de Anderson Darling ----------------------------
ad.test(pp.matrix)
ad.test(ndvi.matrix)
## Creación de variables  ------------------------------
x <- pp.matrix
y <- ndvi.matrix
lag <- 3
## Generar la correlación rezagadas y su significancia -----
a <- data.frame(matrix(nrow = lag+1, ncol = ncol(y)))
colnames(a) <- c(1:12)
b <- data.frame(matrix(nrow = lag+1, ncol = ncol(y)))
colnames(b) <- c(1:12)
## Variable meses -----------------------------------------
c <- data.frame(matrix(nrow = lag+1, ncol = ncol(y)))
colnames(c) <- c(1:12)
## Correlación sin lags -----------------------------------
for(j in 1:ncol(y)){
a[1,j] = cor(x[,j],y[,j],method="spearman")
b[1,j] = cor.test(x[,j],y[,j],method="spearman")[3] %>%
as.numeric()
c[1,j] = j
}
## Correlación con lags --------------------------------
for(k in 1:lag){
for(j in 1:ncol(y)){
if(j+k <= 12){
a[k+1,j] = cor(x[,j],y[,j+ k],method="spearman")
b[k+1,j] = cor.test(x[,j],y[,j+ k],method="spearman")[3] %>%                       as.numeric()
c[k+1,j] = j + k
} else{
a[k+1,j] = cor(x[,j],y[,(j+k)-12],method="spearman")
b[k+1,j] =cor.test(x[,j],y[,(j+k)-12],
method="spearman")[3]%>%
as.numeric()
c[k+1,j] = (j + k) -12
}
}
}
## Graficando la correlacion rezagada ---------------------
## Convirtiendo a meses
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep",
"Oct","Nov","Dec")
# Corr ----------------------------------------------------
melted_a <- reshape2::melt(a)
melted_a$variable2 = melt(c)$value %>% as.vector()
melted_a$variable <- factor(month.abb[melted_a$variable],
levels = months)
melted_a$variable2 <- factor(month.abb[melted_a$variable2],
levels = months)
names(melted_a) <- c('pp','corr','ndvi')
## p-value -------------------------------------------------
melted_b <- reshape2::melt(b)
melted_b$variable2 = melt(c)$value %>% as.vector()
melted_b$variable <- factor(month.abb[melted_b$variable],
levels = months)
melted_b$variable2 <- factor(month.abb[melted_b$variable2],
levels = months)
names(melted_b) <- c('pp','pvalue','ndvi')
# Heatmap corr ----------------------------------------------------
ggplot(melted_a, aes(pp,ndvi))+ geom_raster(aes(fill=corr)) +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab", name="Non parametric\nSpearman Correlation") +
ggtitle('Correlación rezagada de Precipitación con NDVI', subtitle = 'De 2000 a 2017') +
labs(x = 'Precipitación acumulada mensual\n[mm/mes]', y = 'NDVI', fill='')
# Heatmap pvalue ------------------------------------------------
ggplot(melted_b, aes(pp,ndvi))+ geom_raster(aes(fill=pvalue<0.05))
((stack(lista4) - NDVI_MEAN[[1]]) / NDVI_SD[[1]])
((stack(lista4) - NDVI_MEAN[[12]]) / NDVI_SD[[12]])
f <- ((stack(lista4) - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
f <- ((stack(lista4) - NDVI_MEAN[[12]]) / NDVI_SD[[12]])
spl <- sapply(f, mean)
spl
f
f <- list(((stack(lista4) - NDVI_MEAN[[12]]) / NDVI_SD[[12]]))
f
f <- list(stack((stack(lista4) - NDVI_MEAN[[12]]) / NDVI_SD[[12]]))
f
f <- list(stack((stack(lista4) - NDVI_MEAN[[12]]) / NDVI_SD[[12]]))[[1]]
f
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
v4[p] = ((NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
v4[p] = mean((NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
mean((NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]])
NDVI_2000_2018[[1]]
NDVI_MEAN[[1]]
(NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]]
NDVI_SD
NDVI_SD[[1]]
NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]
NDVI_2000_2018[[1]]
NDVI_2000_2018[[1]]
mean(NDVI_2000_2018[[1]])
NDVI_2000_2018[[1]]
NDVI_2000_2018[1]
NDVI_2000_2018[[1]]
NDVI_2000_2018$NDVI_Mensual_2000_2018.1
getValues(NDVI_2000_2018[[1]])
(getValues(NDVI_2000_2018[[1]]) - getValues(NDVI_MEAN[[1]])) / getValues(NDVI_SD[[1]])
getValues(NDVI_2000_2018[[1]]) - getValues(NDVI_MEAN[[1]])
getValues(NDVI_2000_2018[[1]])
getValues(NDVI_MEAN[[1]])
# Generar mensuales pero sin el primero enero, no existe
date <- seq(as.Date('2000-02-15'), as.Date('2018-12-15'), by = "month")
ndvi_lista <- list.files("RasterData/Resultados/SavGol/", pattern = '.tif$', full.names = T)
lista1 <- list()
lista2 <- list()
# Generar mensuales pero sin el primero enero, no existe
date <- seq(as.Date('2000-02-15'), as.Date('2018-12-15'), by = "month")
ndvi_lista <- list.files("RasterData/Resultados/SavGol/", pattern = '.tif$', full.names = T)
lista1 <- list()
lista2 <- list()
for (i in 1:length(date)) {
print(i)
for (j in 1:length(ndvi_lista)) {
if (substr(ndvi_lista[[j]], 30, 33) == substr(date, 1, 4)[i] & substr(ndvi_lista[[j]], 35, 36) == substr(date, 6, 7)[i]) {
x = 1
lista1[[x]] = raster(ndvi_lista[j])
x = x + 1
}
}
lista2[[i]] = mean(stack(lista1))
}
# Para generar el primer enero
y = 1
lista3 <- list()
for(i in seq(12, 227, 12)) {
lista3[[y]] = lista2[[i]]
y = y + 1
}
enero_ndvi <- mean(stack(lista3))
# stack mensual desde 2000 a 2018
stack_mensual00_18 <- stack(c(enero_ndvi, lista2))
ppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif") # cargamos el modelo a seguir
area <- st_read("Materiales/area.gpkg")
NDVI_Mensual_2000_2018 <- raster::resample(stack_mensual00_18, ppp)
NDVI_Mensual_2000_2018 <- crop(NDVI_Mensual_2000_2018, area, snap = "out")
NDVI_Mensual_2000_2018
getValues(NDVI_Mensual_2000_2018$layer.1)
writeRaster(NDVI_Mensual_2000_2018, "RasterData/VarCorrelation/Variables/NDVI_Mensual_2000_2018.tif")
# mensual historico
lista4 <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= length(stack_mensual00_18[1])) {
lista4[[p]] = stack_mensual00_18[[n]]
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = mean(stack(lista4))
print(i)
}
getValues(stack_mensual00_18$layer.1)
# ndvi mensual historica (sin resampl)
# Ndvi_mensual # lista de raster mensual
Ndvi_mensual_stack <- stack(Ndvi_mensual)
area <- st_read("Materiales/area.gpkg")
pppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif")
Ndvi_mensual_stack <- raster::resample(Ndvi_mensual_stack, pppp)
Ndvi_mensual_stack <- crop(Ndvi_mensual_stack, area, snap = "out")
Ndvi_mensual_stack$layer.1
getValues(Ndvi_mensual_stack$layer.1)
stack_mensual00_18$layer.1
getValues(stack_mensual00_18$layer.1)
getValues(stack_mensual00_18$layer.1)
getValues(Ndvi_mensual_stack$layer.1)
getValues(NDVI_Mensual_2000_2018$layer.1)
getValues(Ndvi_mensual_stack$layer.2)
getValues(NDVI_Mensual_2000_2018$layer.1)
getValues(NDVI_Mensual_2000_2018$layer.2)
p
length(stack_mensual00_18[1])
# mensual historico
lista4 <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(stack_mensual00_18)) {
lista4[[p]] = stack_mensual00_18[[n]]
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = calc(stack(lista4), fun = mean)
print(i)
}
Ndvi_mensual
Ndvi_mensual_stack <- stack(Ndvi_mensual)
area <- st_read("Materiales/area.gpkg")
pppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif")
Ndvi_mensual_stack <- raster::resample(Ndvi_mensual_stack, pppp)
Ndvi_mensual_stack <- crop(Ndvi_mensual_stack, area, snap = "out")
Ndvi_mensual_stack$layer.1
NDVI_Mensual_2000_2018$layer.1
date <- seq(as.Date('2000-02-15'), as.Date('2018-12-15'), by = "month")
ndvi_lista <- list.files("RasterData/Resultados/SavGol/", pattern = '.tif$', full.names = T)
lista1 <- list()
lista2 <- list()
for (i in 1:length(date)) {
print(i)
for (j in 1:length(ndvi_lista)) {
if (substr(ndvi_lista[[j]], 30, 33) == substr(date, 1, 4)[i] & substr(ndvi_lista[[j]], 35, 36) == substr(date, 6, 7)[i]) {
x = 1
lista1[[x]] = raster(ndvi_lista[j])
x = x + 1
}
}
lista2[[i]] = mean(stack(lista1))
}
# Para generar el primer enero
y = 1
lista3 <- list()
for(i in seq(12, 227, 12)) {
lista3[[y]] = lista2[[i]]
y = y + 1
}
enero_ndvi <- mean(stack(lista3))
# stack mensual desde 2000 a 2018
stack_mensual00_18 <- stack(c(enero_ndvi, lista2))
stack_mensual00_18
ppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif") # cargamos el modelo a seguir
area <- st_read("Materiales/area.gpkg")
NDVI_Mensual_2000_2018 <- raster::resample(stack_mensual00_18, ppp)
NDVI_Mensual_2000_2018 <- crop(NDVI_Mensual_2000_2018, area, snap = "out")
#
# writeRaster(NDVI_Mensual_2000_2018, "RasterData/VarCorrelation/Variables/NDVI_Mensual_2000_2018.tif")
# mensual historico
lista4 <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_Mensual_2000_2018)) {
lista4[[p]] = NDVI_Mensual_2000_2018[[n]]
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = calc(stack(lista4), fun = mean)
print(i)
}
# ndvi mensual historica (sin resampl)
# Ndvi_mensual # lista de raster mensual
Ndvi_mensual_stack <- stack(Ndvi_mensual)
stack_mensual00_18$layer.1
Ndvi_mensual_stack$layer.1
# area <- st_read("Materiales/area.gpkg")
# pppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif")
# Ndvi_mensual_stack <- raster::resample(Ndvi_mensual_stack, pppp)
# Ndvi_mensual_stack <- crop(Ndvi_mensual_stack, area, snap = "out")
#
writeRaster(Ndvi_mensual_stack, "RasterData/VarCorrelation/NDVI_MEAN_MENSUAL.tif")
# area <- st_read("Materiales/area.gpkg")
# pppp <- stack("RasterData/PISCO/PISCOp_v11_area.tif")
# Ndvi_mensual_stack <- raster::resample(Ndvi_mensual_stack, pppp)
# Ndvi_mensual_stack <- crop(Ndvi_mensual_stack, area, snap = "out")
#
writeRaster(Ndvi_mensual_stack, "RasterData/VarCorrelation/Variables/NDVI_MEAN_MENSUAL.tif")
# desviación mensual historico
lista4 <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_Mensual_2000_2018)) {
lista4[[p]] = NDVI_Mensual_2000_2018[[n]]
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = calc(stack(lista4), fun = sd)
print(i)
}
Ndvi_mensual_stack <- stack(Ndvi_mensual)
writeRaster(Ndvi_mensual_stack, "RasterData/VarCorrelation/Variables/NDVI_SD_MENSUAL.tif")
# stack mensual desde 2000 a 2017
date <- seq(as.Date('1981-01-01'),as.Date('2018-02-01'), by='month') # fechas del stack pisco pp
pp <- stack('RasterData/PISCO/PISCOp_v11_area.tif')
rang <- which(date == '2000-01-01'):which(date == '2017-12-01')
pp <- pp[[rang]]
area <- st_read("Materiales/area.gpkg")
pp_Mensual_2000_2018 <- crop(pp, area, snap = "out")
pp_Mensual_2000_2018 <- crop(pp, area, snap = "out")
writeRaster(pp_Mensual_2000_2018, "RasterData/VarCorrelation/Variables/PP_Mensual_2000_2018.tif")
# mensual historico
lista6 <- list()
PP_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= length(rang)) {
lista6[[p]] = pp_Mensual_2000_2018[[n]]
n = n + 12
p = p + 1
}
PP_mensual[[i]] = mean(stack(lista6))
print(i)
}
# pp mensual historica (sin resampl)
# PP_mensual # lista de raster mensual
PP_mensual_stack <- stack(PP_mensual)
writeRaster(PP_mensual_stack, "RasterData/VarCorrelation/Variables/PP_MEAN_MENSUAL.tif")
PP_mensual_stack <- stack(PP_mensual)
writeRaster(PP_mensual_stack, "RasterData/VarCorrelation/Variables/PP_SD_MENSUAL.tif")
writeRaster(PP_mensual_stack, "RasterData/VarCorrelation/Variables/PP_SD_MENSUAL.tif")
## NDVI y PP mensual 2000 - 2018
NDVI_2000_2018 <- stack("RasterData/VarCorrelation/Variables/NDVI_Mensual_2000_2018.tif")
PP_2000_2018 <- stack("RasterData/VarCorrelation/Variables/PP_Mensual_2000_2018.tif")
## Promedios NDVI y PP crop
NDVI_MEAN <- stack("RasterData/VarCorrelation/Variables/NDVI_MEAN_MENSUAL.tif")
PP_MEAN <- stack("RasterData/VarCorrelation/Variables/PP_MEAN_MENSUAL.tif")
## Sds NDVI y PP crop
NDVI_SD <- stack("RasterData/VarCorrelation/Variables/NDVI_SD_MENSUAL.tif")
PP_SD <- stack("RasterData/VarCorrelation/Variables/PP_SD_MENSUAL.tif")
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
v4[p] = mean((NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]
mean((NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]])
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
v4[p] = mean((NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
mean((NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]])
NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]
(NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]]
mean((NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]])
#   p = 1
#   n = i
#   while (n <= nlayers(NDVI_2000_2018)) {
#     lista4[[p]] = NDVI_2000_2018[[n]]
#     n = n + 12
#     p = p + 1
#   }
#   Ndvi_mensual[[i]] = ((stack(lista4) - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
#   print(i)
# }
area <- st_read("Materiales/area.gpkg")
#   p = 1
#   n = i
#   while (n <= nlayers(NDVI_2000_2018)) {
#     lista4[[p]] = NDVI_2000_2018[[n]]
#     n = n + 12
#     p = p + 1
#   }
#   Ndvi_mensual[[i]] = ((stack(lista4) - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
#   print(i)
# }
area <- st_read("Materiales/area.gpkg")
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
dd = mean((NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
v4[p] = dd$extract(sp = area, fun = function(x){ mean(x, na.rm = T) }) %>% as.vector()
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
(NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]]
dd = (NDVI_2000_2018[[1]] - NDVI_MEAN[[1]]) / NDVI_SD[[1]]
dd$extract(sp = area, fun = function(x){ mean(x, na.rm = T) }) %>% as.vector()
zonal(dd, area, fun = "mean")
dd
getValues(dd)
mean(getValues(dd))
#   p = 1
#   n = i
#   while (n <= nlayers(NDVI_2000_2018)) {
#     lista4[[p]] = NDVI_2000_2018[[n]]
#     n = n + 12
#     p = p + 1
#   }
#   Ndvi_mensual[[i]] = ((stack(lista4) - NDVI_MEAN[[i]]) / NDVI_SD[[i]])
#   print(i)
# }
area <- st_read("Materiales/area.gpkg")
v4 <- list()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
dd = (NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]]
v4[p] = mean(getValues(dd))
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
# En crop NDVI ----------------------------------------
# area <- st_read("Materiales/area.gpkg")
v4 <- c()
# hist_monthly <- list()
Ndvi_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(NDVI_2000_2018)) {
dd = (NDVI_2000_2018[[n]] - NDVI_MEAN[[i]]) / NDVI_SD[[i]]
v4[p] = mean(getValues(dd))
n = n + 12
p = p + 1
}
Ndvi_mensual[[i]] = v4
print(i)
}
Ndvi_mensual
v5 <- c()
# hist_monthly <- list()
Pp_mensual <- list()
for (i in 1:12) {
p = 1
n = i
while (n <= nlayers(PP_2000_2018)) {
dd = (PP_2000_2018[[n]] - PP_MEAN[[i]]) / PP_SD[[i]]
v5[p] = mean(getValues(dd))
n = n + 12
p = p + 1
}
Pp_mensual[[i]] = v5
print(i)
}
data.frame(1:12)
df_cov_ndvi <- data.frame(1:12)
df_cov_ndvi
df_cov_ndvi <- data.frame(1:12)
df_cov_ndvi <- data.frame(1:12)
for (i in 1:12) {
df_cov_ndvi[,1+i] = Ndvi_mensual[[i]]
}
df_cov_ndvi <- data.frame(1:19)
for (i in 1:12) {
df_cov_ndvi[,1+i] = Ndvi_mensual[[i]]
}
df_cov_ndvi
df_cov_ndvi
df_cov_pp <- data.frame(1:19)
for (i in 1:12) {
df_cov_pp[,1+i] = Pp_mensual[[i]]
}
df_cov_pp <- data.frame(1:18)
for (i in 1:12) {
df_cov_pp[,1+i] = Pp_mensual[[i]]
}
View(df_cov_ndvi)
write.csv(df_cov_pp, "RasterData/VarCorrelation/NDVI_COV.csv")
write.csv(df_cov_pp, "RasterData/VarCorrelation/PP_COV.csv")
write.csv(df_cov_ndvi, "RasterData/VarCorrelation/NDVI_COV.csv")
write.csv(df_cov_ndvi, "RasterData/VarCorrelation/NDVI_ANOM.csv")
write.csv(df_cov_pp, "RasterData/VarCorrelation/PP_ANOM.csv")
